name: Client Side Tools and Coverage

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["3.1.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set-up dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Generate coverage XML report
        run: |
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Upload coverage report to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report

      - name: Run Codacy Analysis CLI with Docker
        run: |
          export CODACY_CODE=$GITHUB_WORKSPACE
          docker run \
            --rm=true \
            --env CODACY_CODE="$CODACY_CODE" \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume "$CODACY_CODE":"$CODACY_CODE" \
            --volume /tmp:/tmp \
            codacy/codacy-analysis-cli \
              analyze --tool pylint --upload --project-token ${{ secrets.CODACY_PROJECT_TOKEN }} --max-allowed-issues 99999 --commit-uuid $GITHUB_SHA
